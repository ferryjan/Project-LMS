@model IEnumerable<Project_LMS.Models.Module>

<p>
    @Html.ActionLink("Add New Module to The Course", "Create", new { id = ViewBag.CourseId }, new { @class = "btn btn-primary btn-large" })
    <h4 style="color:red">The module(s) in red text => Either start date or end date (or both) is not within the date range of the course!</h4>
</p>

<table class="table">
    <tr>
        <th>@Html.DisplayNameFor(model => model.Name)</th>
        <th>@Html.DisplayNameFor(model => model.StartDate)</th>
        <th>@Html.DisplayNameFor(model => model.EndDate) </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            @if (DateTime.Compare(ViewBag.CourseStartDate, item.StartDate.Date) > 0 || DateTime.Compare(ViewBag.CourseEndDate, item.EndDate.Date) < 0)
            {
                <td style="color:red"> @Html.DisplayFor(modelItem => item.Name) </td> }
            else
            {
                <td> @Html.DisplayFor(modelItem => item.Name) </td>}

            <td>@Html.DisplayFor(modelItem => item.StartDate)</td>
            <td>@Html.DisplayFor(modelItem => item.EndDate) </td>
            <td>
                <a href="@Url.Action("Edit", "Modules", new { id = item.ModuleId})" class="btn btn-primary"><i class="glyphicon glyphicon-edit"></i> <span><strong>Edit</strong></span></a>
                <a href="@Url.Action("Details", "Modules", new { id = ViewBag.CourseId, moduleId = item.ModuleId })" class="btn btn-info"><i class="glyphicon glyphicon-list"></i> <span><strong>Details</strong></span></a>
                <a href="@Url.Action("MoveModule", "Modules", new { id =  item.ModuleId })" class="modal-link btn btn-info"><i class="glyphicon glyphicon-move"></i> <span><strong>Move</strong></span></a>
                <a href="@Url.Action("Delete", "Modules", new { id = ViewBag.CourseId, moduleId = item.ModuleId, isVerified = false })" class="btn btn-danger"><i class="glyphicon glyphicon-erase"></i><span><strong>Delete</strong> </span> </a>
            </td>
        </tr>

        });
    }

</table>

<script type="text/javascript">
        $(function () {
            // Initialize numeric spinner input boxes
            //$(".numeric-spinner").spinedit();
            // Initialize modal dialog
            // attach modal-container bootstrap attributes to links with .modal-link class.
            // when a link is clicked with these attributes, bootstrap will display the href content in a modal dialog.
            $('body').on('click', '.modal-link', function (e) {
                e.preventDefault();
                $(this).attr('data-target', '#modal-container');
                $(this).attr('data-toggle', 'modal');
            });
            // Attach listener to .modal-close-btn's so that when the button is pressed the modal dialog disappears
            $('body').on('click', '.modal-close-btn', function () {
                $('#modal-container').modal('hide');
            });
            //clear modal cache, so that new content can be loaded
            $('#modal-container').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
            });
            $('#CancelModal').on('click', function () {
                return false;
            });
        });
</script>


