@model IEnumerable<Project_LMS.Models.Activity>


<style>
    .table > thead > tr > th,
    .table > tbody > tr > th,
    .table > tfoot > tr > th,
    .table > thead > tr > td,
    .table > tbody > tr > td,
    .table > tfoot > tr > td {
        padding: 0px 0px;
    }
</style>

@{
    List<Project_LMS.Models.Activity> activityDateInCollision = new List<Project_LMS.Models.Activity>();

    foreach (var activity in Model)
    {
        if (Model.FirstOrDefault(m => m.ActivityId != activity.ActivityId &&
        ((DateTime.Compare(m.Start, activity.Start) < 0) && (DateTime.Compare(m.End, activity.Start) > 0 && activity.ActivityType.Type != "Homework" && m.ActivityType.Type != "Homework") ||
        (DateTime.Compare(m.Start, activity.Start) > 0) && (DateTime.Compare(m.End, activity.End) < 0 && activity.ActivityType.Type != "Homework" && m.ActivityType.Type != "Homework") ||
        (DateTime.Compare(m.Start, activity.Start) == 0) && (DateTime.Compare(m.End, activity.End) < 0 && activity.ActivityType.Type != "Homework" && m.ActivityType.Type != "Homework") ||
        (DateTime.Compare(m.Start, activity.Start) > 0) && (DateTime.Compare(m.End, activity.End) == 0 && activity.ActivityType.Type != "Homework" && m.ActivityType.Type != "Homework") ||
        (DateTime.Compare(m.Start, activity.End) < 0) && (DateTime.Compare(m.End, activity.End) > 0 && activity.ActivityType.Type != "Homework" && m.ActivityType.Type != "Homework"))) != null)
        {
            activityDateInCollision.Add(activity);
        }
    }

    var inValidActivity = Model.FirstOrDefault(item => DateTime.Compare(ViewBag.CourseStartDate, item.Start.Date) > 0 || DateTime.Compare(ViewBag.CourseEndDate, item.End.Date) < 0
        || DateTime.Compare(ViewBag.ModuleStartDate, item.Start.Date) > 0 || DateTime.Compare(ViewBag.ModuleEndDate, item.End.Date) < 0);
}


<p>
    @Html.ActionLink("Add New Activity to The Module", "Create", new { id = ViewBag.ModuleId }, new { @class = "btn btn-primary btn-large" })
    @if (inValidActivity != null)
    {
        <h4 style="color:red">The activity in red text: Either start date or end date (or both) of the activity is not within the date range of the module!</h4>
    }
    @if (activityDateInCollision.Count != 0)
    {
        <h4 style="color:blue">The activity name(s) in blue text: Date range of the activity overlaps with one or more activities!</h4>
    }

</p>
<!-- html comment-->
@*C sharp comment*@
@if (Model.Count() != 0)
{
    <table class="table">
        <tr>
            <th class="col-md-3">@Html.DisplayNameFor(model => model.ActivityName)</th>
            <th class="col-md-2">@Html.DisplayNameFor(model => model.Start) </th>
            <th class="col-md-2">@Html.DisplayNameFor(model => model.End)</th>
            <th class="col-md-5"></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                @if (DateTime.Compare(ViewBag.CourseStartDate, item.Start.Date) > 0 || DateTime.Compare(ViewBag.CourseEndDate, item.End.Date) < 0
    || DateTime.Compare(ViewBag.ModuleStartDate, item.Start.Date) > 0 || DateTime.Compare(ViewBag.ModuleEndDate, item.End.Date) < 0)
                {
                    if (item.ActivityType.Type == "Homework")
                    {
                        <td class="col-md-3" style="color:red">
                            <div><i class="glyphicon glyphicon-home"></i> @Html.DisplayFor(modelItem => item.ActivityName)</div>

                        </td>
                    }
                    else
                    {
                        <td class="col-md-3" style="color:red">@Html.DisplayFor(modelItem => item.ActivityName)</td>
                    }
                }
                else
                {
                    if (activityDateInCollision.FirstOrDefault(m => m.ActivityId == item.ActivityId) != null)
                    {
                        if (item.ActivityType.Type == "Homework")
                        {
                            <td class="col-md-3" style="color:blue">
                                <div><i class="glyphicon glyphicon-home"></i> @Html.DisplayFor(modelItem => item.ActivityName)</div>

                            </td>
                        }
                        else
                        {
                            <td class="col-md-3" style="color:blue">@Html.DisplayFor(modelItem => item.ActivityName)</td>
                        }
                    }
                    else
                    {
                        if (item.ActivityType.Type == "Homework")
                        {
                            <td class="col-md-3">
                                <div><i class="glyphicon glyphicon-home"></i> @Html.DisplayFor(modelItem => item.ActivityName)</div>

                            </td>
                        }
                        else
                        {
                            <td class="col-md-3">@Html.DisplayFor(modelItem => item.ActivityName)</td>
                        }
                    }
                }


                <td class="col-md-2">@Html.DisplayFor(modelItem => item.Start)</td>
                <td class="col-md-2">@Html.DisplayFor(modelItem => item.End)</td>
                <td class="col-md-5" style="text-align:center">
                    <div class="btn-group-sm">
                        <a href="@Url.Action("Edit", "Activities", new { id = item.ActivityId })" class="btn btn-primary">
                            <i class="glyphicon glyphicon-edit"></i>
                            <span>
                                <strong>Edit</strong>
                            </span>
                        </a>
                        <a href="@Url.Action("Details", "Activities", new { id = item.ActivityId })" class="btn btn-info">
                            <i class="glyphicon glyphicon-list"></i>
                            <span>
                                <strong>Details</strong>
                            </span>
                        </a>
                        <a href="@Url.Action("Delete", "Activities", new { id = item.ActivityId, isVerified = false })" class="btn btn-danger">
                            <i class="glyphicon glyphicon-erase"></i>
                            <span>
                                <strong>Remove Activity</strong>
                            </span>
                        </a>
                    </div>
                </td>
            </tr>
        }

    </table>
}
else
{
    <h3 style="color:crimson">No activity has been added to this module!</h3>
}

