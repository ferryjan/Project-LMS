@model Project_LMS.ViewModels.ChangeProfileViewModels

@{ ViewBag.Title = "Edit";}

<div class="row no-gutters container">
    <div class="col-md-3">
        @if (@User.IsInRole("Teacher"))
        {<h2>Edit Teacher</h2>}
    </div>
    <div class="col-md-9">
        @if (Model.ProfileImageRef != "")
        {<img alt="" src="~/Pictures/@Model.ProfileImageRef" data-radium="true" style="width: 128px; height: 128px; border-radius: 00%">}
        else
        {<img alt="" src="~/Pictures/defaultavatar.png" data-radium="true" style="width: 128px; height: 128px; border-radius: 00%">}
    </div>
</div>


    @using (Html.BeginForm("Edit", "ApplicationUser", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()


        <div class="form-horizontal">


            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <h4 style="color:indianred"> @ViewBag.Errmsg </h4>
            @Html.HiddenFor(model => model.UserId)

            <div class="form-group">
                @Html.LabelFor(model => model.GivenName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GivenName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GivenName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FamilyName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FamilyName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FamilyName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <h4 style="visibility:hidden">@Html.Raw("1")</h4>
                <h4 style="font-weight: bold">@Html.Raw("Upload your profile image here:")</h4>
                <div class="editor-field">
                    <input type='file' accept=".png, .gif" name="Profile" id="FileUpload1"/>
                    <br />
                    <br />
                    <h4 id="cropText">Crop the image by clicking and dragging with your mouse</h4>
                    <table border="0" cellpadding="0" cellspacing="5">
                        <tr>
                            <td>
                                <img id="Image1" src="" alt="" style="display: none; max-height: 800px;  max-width: 800px" />
                            </td>
                            <td>
                                <canvas id="canvas" height="5" width="5" style="display: none"></canvas>
                            </td>
                        </tr>
                    </table>
                    <input type="hidden" name="imgX1" id="imgX1" />
                    <input type="hidden" name="imgY1" id="imgY1" />
                    <input type="hidden" name="imgWidth" id="imgWidth" />
                    <input type="hidden" name="imgHeight" id="imgHeight" />
                    <input type="hidden" name="imgCropped" id="imgCropped" />
                </div>
            </div>
            <br />
            <div class="form-group">
                <div class="col-md-offset-0 col-md-10">
                    <input type="submit" id="btnUpload" value="Save" class="btn btn-primary" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn-large" })
                </div>

            </div>
            <div>

            </div>
        </div>

    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript" src="~/Scripts/jquery-3.3.1.min.js"></script>
        <script type="text/javascript" src="~/Scripts/jquery.Jcrop.min.js"></script>
        <link href="@Url.Content("~/Content/jquery.Jcrop.css")" rel="stylesheet" type="text/css" />


        <script type="text/javascript">
            $('#cropText').hide();
            $(function () {
                $('#FileUpload1').change(function () {
                    $('#Image1').hide();
                    $('#btnUpload').hide();
                    $('#cropText').show();
                    $('#FileUpload1').hide();
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#Image1').show();
                        $('#Image1').attr("src", e.target.result);
                        $('#Image1').Jcrop({
                            onChange: SetCoordinates,
                            onSelect: SetCoordinates
                        });
                    }
                    reader.readAsDataURL($(this)[0].files[0]);
                });
            });
            function SetCoordinates(c) {
                $('#imgX1').val(c.x);
                $('#imgY1').val(c.y);
                $('#imgWidth').val(c.w);
                $('#imgHeight').val(c.h);
                var x1 = $('#imgX1').val();
                var y1 = $('#imgY1').val();
                var width = $('#imgWidth').val();
                var height = $('#imgHeight').val();
                var canvas = $("#canvas")[0];
                var context = canvas.getContext('2d');
                var img = new Image();
                img.onload = function () {
                    canvas.height = height;
                    canvas.width = width;
                    context.drawImage(img, x1, y1, width, height, 0, 0, width, height);
                    $('#imgCropped').val(canvas.toDataURL());
                    $('#btnUpload').show();
                };
                img.src = $('#Image1').attr("src");
            };
        </script>
    }

